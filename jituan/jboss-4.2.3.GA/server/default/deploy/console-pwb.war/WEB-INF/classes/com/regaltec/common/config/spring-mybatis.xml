<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">
   <!--  
    <bean id="metaDataDs" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
        <property name="driverClassName"><value>oracle.jdbc.driver.OracleDriver</value></property> 
        <property name="url"><value>jdbc:oracle:thin:@10.128.90.123:4546:sqmtest1</value></property> 
        <property name="username"><value>unrsas</value></property> 
        <property name="password"><value>ccssqm</value></property> 
     
    </bean> 
    -->
     <!-- 源数据源 -->
     <bean id="metaDataDs" class="org.springframework.jndi.JndiObjectFactoryBean">  
        <property name="jndiName">  
            <value>metadataDB</value>  
        </property>  
    </bean>  
    <!-- 采集层数据源 -->
    <bean id="collectionDs" class="org.springframework.jndi.JndiObjectFactoryBean">  
        <property name="jndiName">  
            <value>collectionDB</value>  
        </property>  
    </bean> 
    <!-- ========================================针对myBatis的配置项============================== -->
    <!-- 配置sqlSessionFactory 源数据用户 -->
    <bean id="metaDataSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <property name="dataSource" ref="metaDataDs" />
        <!-- 自动扫描com.ccssoft.pd.web.bs.dao目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置
         -->
        <property name="mapperLocations" value="classpath:com.ccssoft.rsas.**.*Mapper.xml" />
        <!-- 读取mybatis配置文件方式 -->
        <!--  
        <property name="configLocation" value="classpath:com.ccssoft.rsas.**.collection_mybatis-config.xml"></property>  
        -->
    </bean> 
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描com.ccssoft.pd.web.bs.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.ccssoft.rsas.pwb.user.*" />
        <property name="sqlSessionFactoryBeanName" value="metaDataSqlSessionFactory" />
    </bean>     
    <bean id="metaDataSqlSessionTemplate"  class="org.mybatis.spring.SqlSessionTemplate"> 
           <constructor-arg index="0" ref="metaDataSqlSessionFactory" />  
    </bean>  
     
    <bean id="collectionSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="collectionDs" />
        <property name="mapperLocations" value="classpath:com.ccssoft.rsas.pwb.user.**.*Mapper.xml" />
        <!-- 读取mybatis配置文件方式 -->
        <!--  
        <property name="configLocation" value="classpath:com.ccssoft.rsas.**.collection_mybatis-config.xml"></property>  
        -->
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ccssoft.rsas.collection.dao.*" />
        <property name="sqlSessionFactoryBeanName" value="collectionSqlSessionFactory" />
    </bean>
     
     <bean id="collectionSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">     
           <constructor-arg index="0" ref="collectionSqlSessionFactory" />  
    </bean> 
    
    <!--配置Spring的事务管理器 -->
    <!-- 元数据库事务-->
    <bean id="metaDataDstransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="metaDataDs" />
    </bean>
    <!-- 注解方式驱动事务 -->
    <tx:annotation-driven mode="aspectj" transaction-manager="metaDataDstransactionManager" /> 
   <!-- 采集层数据库事务-->
   <bean id="collectionDstransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="collectionDs" />
    </bean>
    <!-- 注解方式驱动事务-->
    <tx:annotation-driven  mode="aspectj" transaction-manager="collectionDstransactionManager" />
    
    
</beans>