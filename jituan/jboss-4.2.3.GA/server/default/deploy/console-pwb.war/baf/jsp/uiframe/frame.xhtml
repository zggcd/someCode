<?xml version="1.0" encoding="UTF-8"?>

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:s="http://shale.apache.org/core"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:fn="http://java.sun.com/jstl/functions"
	xmlns:regaltec="http://regaltec.org/customConponent">


	<f:view contentType="text/html">
	        
		<f:loadBundle basename="messages" var="msgs" />

		<head>
			<a4j:include viewId="message_js.xhtml" />
			<title><h:outputText value="#{loginFrameBean.frameTitle}"
					transient="true" />
			</title>
			<script>
 	//<![CDATA[

	
     	var context_Path = "";
 	var context_Path = document.location.pathname;
	var  baf_postion = context_Path.substr(1).indexOf("/baf");
	if (baf_postion >0)
	{
		context_Path = context_Path.substr(0,baf_postion + 1); 
	}else
	{
	   context_Path = "";
	}
	delete baf_postion;


 	window.onbeforeunload = function()   
    {   
        //用户点击浏览器右上角关闭按钮或是按alt+F4关闭
        if(document.body.clientWidth - event.clientX <20 || event.altKey)   
        {   
             logoutUser1();
        }
        //用户点击任务栏，右键关闭或是按alt+F4关闭
        else if(event.clientY > document.body.clientHeight || event.altKey)
        {
            logoutUser1();
        }  
    }
    
 	//触发鼠标事件
	function onObjectFireMouseEvent(obj, eventname) { 					
		if (document.all) {
			//IE
			obj.fireEvent(eventname);
		} else {
			//firefox						
			var name = eventname.replace("on", "");
			var evtObj = document.createEvent('MouseEvents');     
		  	evtObj.initMouseEvent(name, true, true, document.defaultView, 1, 0, 0, 0, 0, false, false, true, false, 0, null);     
		  	obj.dispatchEvent(evtObj);
		}
	}
 
	//左边导航树形菜单单击事件处理
	function doOnClick()
	{
		var itemId = this.getSelectedItemId();
		if(itemId == "books"  ) return;
		var url = this.getUserData(itemId,'url');
        var title = this.getSelectedItemText();
        var isLeaf = this.getUserData(itemId,'isLeaf');
        var linktarget = this.getUserData(itemId,'linktarget');
        
        if( url == null || url=="/"|| url == "" || url.length == 0) return;       
        if(isLeaf=="Y"){
        	var appId = this.getUserData(itemId,'applicationId');
        	//当模块链接到外部系统时，需要传递operID和hashCode两个参数
        	if(appId!=null && appId!="" && appId!=undefined && appId!='${loginFrameBean.appCode}'){
        		url = url + (url.indexOf("?")==-1?"?":"&")+"operID=${sessionScope.userLoginBean.currentUser.loginName}&hashCode=${loginFrameBean.ssoKey}";
        	}
        	if(linktarget=="B"){
        		if(url.indexOf("/")==0){
        			url = "${request.contextPath}" + url;
        		}
        		window.open(url);	
	        	//将打开的模块放入cookie中
	        	operateCookie(itemId,title,url);
        	}else if(linktarget=="M" || linktarget=="W"){
        	    var moduledesc = this.getUserData(itemId,'desc');
        	    
		       if(url !=null && url.toLowerCase().indexOf("http://") != 0)
			{
			     url = context_Path + url;
			}
        		addTab(itemId,title,url);
        	}
		}
		//window.open("<%=request.getContextPath()%>"+url,"workarea");
	}
	
	//获取字符串长度（区分中英文）
	function getLen(str) {
		var totallength=0;
		for (var i=0;i<str.length;i++)
		{
			//charCodeAt 返回一个整数，获得字符的unicode编码
			var intCode=str.charCodeAt(i);
			if (intCode>=0&&intCode<=128) {//为字符的编码范围
				totallength=totallength+1;//非中文单个字符长度加1
			}
			else {
				totallength=totallength+2;//中文字符长度则加2
			}
		}
		return totallength;
	}
	
	//tab页添加标签页 
	/** 参数说明
	* @itemId  tab页唯一标识
	* @title   tab页唯一标题
	* @url     tab页的视图url
	* @subUrl  tab页中子视图URL，多个URL使用“,”分隔
	*/
 	function addTab(itemId,title,url,subUrl,refresh)
	{
		
		surl = url;
		if( url == null  || url == "" || url.length == 0) return;
		if( surl.indexOf("http") < 0 && surl.indexOf("HTTP") < 0  )
		{
			surl =  "${request.contextPath}"+ surl;
			if(url.indexOf("?")>0){
				surl = surl + "&tabId=tab_" + itemId;
			}else{
				surl = surl + "?tabId=tab_" + itemId;
			}
		}
		var tab = Ext.getCmp("tab_"+itemId);
		var tabpanel = Ext.getCmp('center-tabpanel');
		if(  tab )
		{
		    tabpanel.setActiveTab(tab);
			if(refresh=="Y")
		      Ext.getCmp('center-tabpanel').getActiveTab().body.dom.firstChild.contentWindow.location.reload(true);
			 if(url.indexOf("refresh=tab")>0)
		      Ext.getCmp('center-tabpanel').getActiveTab().body.dom.firstChild.contentWindow.location.reload(true);
			
		}
		else
		{
			var openModuleNum = 10;
			//获取系统参数中设置的最多可以打开模块的个数
			if(isNaN("#{loginFrameBean.openModuleNum}") == false){
				openModuleNum = parseInt("#{loginFrameBean.openModuleNum}");
			}
			//由于JSF默认最多只能缓存15个视图，所以在这里对打开模块的个数进行限制，最多只能打开系统参数中设定的个数
		    if(tabpanel.items.length == openModuleNum + 1){
				alert("#{msgs['baf.frame.openViewNumMessage1']}" + openModuleNum + "#{msgs['baf.frame.openViewNumMessage2']}");
				return;
			}
		    var tip = "";
		    //当标题长度超过16时，才显示提示内容
		    if(getLen(title)>14){
		   		tip = title;
		    }
		    Ext.QuickTips.init();  //在鼠标移动上去需要出现提示的功能的初始化
	        var tab = tabpanel.add({
		        id:"tab_"+itemId,
	            title: title,
	            iconCls: 'tabs',
	            tabTip: tip,
	            html:'<iframe width="100%" style=overflow-x:auto;overflow-y:auto; height="100%" src="'+surl+'"  name="iframe_'+ itemId + '" ></iframe>',
	            closable:true,
	            margins:'0 0 0 0',
	            url:surl,
	            suburl:subUrl,
	            listeners :{beforedestroy:function(tab){ 
							//关闭此tab之前的触发事件 
							var iframeobj = tab.body.dom.firstChild.contentWindow; 
							if(typeof iframeobj.doBeforeCloseTab == 'function'){ 
							  iframeobj.doBeforeCloseTab(); //如果tab打开页面中有 doBeforeCloseTab事件，则关闭tab之前会触发，可用于业务控制关闭页面时触发事件 
							} 
							return true; 
							} },
	            autoScroll:false
	           
	            
	        });
	        tab.show();
	        //这里存入tabId
	        var iframe = tab.body.dom.firstChild.contentWindow;
	        iframe.tabId = "tab_" + itemId;	        
	        	
        	//将打开的模块放入cookie中
        	operateCookie(itemId,title,url);
        	
        	//保存当前tabId
        	currTabId="tab_" + itemId;
        }
	}
	/*tab页被删除之前的*/
    function removeBefore(ct,component)
    {
    
     var moduleurl = component.url;
     var suburl = component.suburl;
     var moduleId = component.id;
     var xhtml_position  = moduleurl.indexOf(".xhtml");
     moduleurl = moduleurl.substring(0,xhtml_position+6);
     
     /*获模块配置的备注栏中配置的子视图*/
     var subviews = treebox_tree.getUserData(moduleId.substring(4),'desc');
      
     if(subviews != undefined  && subviews != null && subviews != "" )
     {
       moduleurl = moduleurl + "," + subviews;
     }
     /*获取由JS调用addTab传入的子视图的URL的参数suburl值*/
     if ( suburl != undefined  && suburl != null && suburl != "")
     {
         moduleurl = moduleurl + "," + suburl;
     }
     
     //自动刷新获取到焦点的TAB(该功能现在还没有使用)
     //refreshTab(component);
    
     /*调用 释放视图缓存的AJAX请求*/
     freeViewCache(moduleurl);
     return true;
     }
     
     //自动刷新获取到焦点的TAB
     function refreshTab(component){
     	 //刷新下一个获取焦点的tab
	     //console.log(this);
		 var delId=component.id;//删除tab的Id
		 var number=0;
		 var lis = document.getElementsByTagName("li");//获取所有tab
		 if(lis.length==3)return;
		 for(var i=0;i<lis.length;i++){
			      var temp1 = lis[i].id.replace("center-tabpanel__","");//获取tabId
			      if(delId==temp1){
			        	number=i;//获取删除tab的位置
			        	break;
			       }
		 }
		if(delId==currTabId){//删除当前tab
			if(i+1<lis.length-1){//被删除的tab后面其他tab时，下一个获取
			    var reId=lis[lis.length-2].id.replace("center-tabpanel__","");
			    currTabId=reId;//保存下一个焦点tab的id
			    Ext.getCmp('center-tabpanel').findById(reId).body.dom.firstChild.contentWindow.location.reload(true);
			}else{
			       var reId=lis[i-1].id.replace("center-tabpanel__","");
			       currTabId=reId;//保存下一个焦点tab的id
			       Ext.getCmp('center-tabpanel').findById(reId).body.dom.firstChild.contentWindow.location.reload(true);
			 }
		}else{//不是删除当前tab
			        							
		}
     
     }
	//回调tab的jsfFunction方法
	function callBackFunction(tabId) {
		var tab = Ext.getCmp(tabId);
		var iframeobj = tab.body.dom.firstChild.contentWindow;
		iframeobj.callback();
	}

	//移除tab
	function removeTab(obj) {
		var tabId = obj.tabId;
		var tab = Ext.getCmp(tabId);
		var tabpanel = Ext.getCmp('center-tabpanel');
		tabpanel.remove(tab);
		//freeViewCache();
	}

	 function openContextMenu(){
		  try{	 	  
			  var objmenu = Ext.menu.MenuMgr.get("treemenu");
			  
			  if( navigator.userAgent.indexOf("MSIE") > 0 ){  //IE浏览器下
					var e = new Array(window.event.clientX,window.event.clientY);
					objmenu.showAt(e);
				}else if( navigator.userAgent.indexOf("Firefox") > 0 || navigator.userAgent.indexOf("Chrome") > 0 ){  //Firefox浏览器下
					var e = new Array(arguments[1].clientX,arguments[1].clientY);
					objmenu.showAt(e);
		 		}	  
		  }catch(e){
		     alert(e.description);
		  }
	 }
	
	//刷新树
	function reload()
  	{
  		var itemId = treebox_tree.getSelectedItemId();
      	treebox_tree.refreshItem(itemId);
  	}
  	
  	//注销用户
  	function logout(){
  		//是否注销当前登录用户？
  		if(confirm("${msgs['logoutMessage']}"))
  		{
  			//document.getElementById("iform:logout").click();
  			logoutUser();
  		}
  	}
  	//设置当前活动页的标题
  	function setCurTabTitle(title){
  		try{
  			Ext.getCmp('center-tabpanel').getActiveTab().setTitle(title);
  		}catch(exception){
  		}
  		
  	}
  	
  	function onBBS(){
  		window.open("${request.contextPath}/bbsIndex.do?method=index&navId=nav_index_1");
  	}
  	
  	function onLinks(){
  		window.open("#{loginFrameBean.links}");
  	}
  	
  	//刷新快捷功能
  	function refreshShortcut(){
  		refresh();
  	}

	//注销用户，销毁session之后跳转到登陆页面
  	function onLogoutComplete(){
  	
  	   if("Y"=="#{loginFrameBean.isSHLogin}"){
  	       window.close();
  	   }else{
  	    if(""=="#{loginFrameBean.customUrl}"||"Y"=="#{loginFrameBean.customUrl}"){
  	            window.location.href ="${request.contextPath}/baf/jsp/uiframe/login.xhtml";
 	         
 	        }else{
 	            window.location.href ="${request.contextPath}#{loginFrameBean.customUrl}";
 	        } 
  	       
  	   }
		
  	}
  	
  	var tools = [{
	    id:'close',
	    handler: function(e, target, panel){
	        panel.ownerCt.remove(panel, true);
	    }
	}];

	//初始化iframe的高度
	function initHeight(iframe){
		iframe.style.height = window.screen.availHeight - window.screenTop-100;
	}
	function addNewTab(id,url,title){	
	//	addTab(id,title,url);
		addRetMsgTab(id,title,url);
	}
	function addPopUpTab(id,url,title,receiverType){	
		addRetMsgTab(id,title,url);
		//addTab(id,title,url);
	       //增加已读记录，并从缓存清除
		  addReader(id,receiverType);
		  //刷新消息，刷新缓存有延迟
		 // setTimeout(refreshMsg,2000);
		  //计数器清0
		  count=0;
	}


  	
	//tab页面激活
	function setActiveTab(tabId) {
		var tab = Ext.getCmp(tabId);
		var tabpanel = Ext.getCmp('center-tabpanel');
		if(  tab )
		{
		    tabpanel.setActiveTab(tab);
		}		
	}
	
	function setIs_zhzs(){
		if(document.getElementById("is_zhzs").checked){ 
			setProfile("Y");
		}else{
			setProfile("N");
		}
		
	}
	
	//全局变量，用于记录每次点击的tab页ID，进而区分onclick和tabchange操作
	var activeTabId = "";
	var currTabId="";
	//双击主页面tabPanel关闭tab页
  	Ext.override(Ext.TabPanel, {
      	initEvents : function(){
          	Ext.TabPanel.superclass.initEvents.call(this);
          	this.on('add', this.onAdd, this);
          	this.on('remove', this.onRemove, this);
          	this.strip.on('mousedown', this.onStripMouseDown, this);
          	this.strip.on('contextmenu', this.onStripContextMenu, this);
          	this.strip.on('dblclick', this.onTitleDbClick, this);
          	this.strip.on('click', this.onTitleClick, this);
          	this.strip.on('mousemove', this.onTitleMouseMove, this);
          	if(this.enableTabScroll){
          		this.strip.on('mousewheel', this.onWheel, this);
          	}
     	},
     	onTitleDbClick:function(e,target,o){
        	var t = this.findTargets(e);  
        	//只删除新打开的tab页，“我的工作台”不能关闭
        	if(t.item != null && t.item.id != undefined && t.item.id.indexOf("tab_") == 0){
				if (t.item.fireEvent('beforeclose', t.item) !== false && t.item.closable!==false) {   
	           		t.item.fireEvent('close', t.item);   
	            	this.remove(t.item);                                          
	        	}   
        	}
     	},
     	onTitleMouseMove:function(e,target,o){
        	var t = this.findTargets(e);  
        	if(t.item != null && t.item.id != undefined && t.item.id.indexOf("tab_") == 0){
        		//由于tabpanel本身设置激活的tab页鼠标是指针形状，未激活的是手形，所以在这里只有当前鼠标下方是激活的tab页时，才进行下面的操作
        		if(this.activeTab.id == t.item.id){
        			//tabpanel所有的子tab头是有li标签来解析的，在这里获取所有的li标签
	        		var lis = document.getElementsByTagName("li");
	        		for(var i=0;i<lis.length;i++){
	        			var temp1 = lis[i].id;
	        			var temp2 = "center-tabpanel__" + t.item.id;
	        			//判断li的id是否和当前子tab的id相同
	        			if(temp1 == temp2){
	        				//获取当前鼠标和tab头的X坐标之差
	        				var result = window.event.clientX - pageX(lis[i]);
	        				//获取页面所有的style样式
        					var ss = document.styleSheets;
        					for(var j=0;j<ss.length;j++){
							    var rules = ss[j].rules?ss[j].rules:ss[j].cssRules;
							    var t1 = j, t2 = j;
							    for(var k=0;k<rules.length;k++){
							    	//在这里需要对EXT自带样式进行动态修改，以改变移到刷新图标上的鼠标形状
							   		if(rules[k].selectorText.toLowerCase() == ".x-tab-strip-active span.x-tab-strip-text"){
							   			//目前测试所得，当鼠标与tab头的X坐标之差在6到24之间时，就是刷新图标的位置
							   			if(result > 6 && result <= 24){
							   				//将鼠标改为手形
								   			//if(rules[k].style.cursor == "default"){
								        		rules[k].style.cursor = "pointer";
								        	//}
								        }else{
								        	//将鼠标改为指针
								        	//if(rules[k].style.cursor == "hand"){
								        		rules[k].style.cursor = "default";
								        	//}
								        }
								        t2 = k;
							        	break;
							        }
							    }
							    if(t1 != t2){
							    	break;
							    }
        					}	     
        					break;   					
	        			}
	        		}
	        	}
        	}
     	},
     	onTitleClick:function(e,target,o){
        	var t = this.findTargets(e);  
        	//只有点击tab页的图标时，才去刷新页面
        	if(t.item != null && t.item.id != undefined && t.item.id.indexOf("tab_") == 0){
        		//上海需求 点击tab时刷新页面
        		var url=t.item.url;
        		if(null!=url && url.indexOf("refresh=tab")>0){
        			Ext.getCmp('center-tabpanel').getActiveTab().body.dom.firstChild.contentWindow.location.reload(true);
        			return;
        		}
		      		
	        	//当切换tab页时，若点的是刷新图标，此时不做刷新操作，只有在当前tab页点击刷新图标才刷新tab页
	     		if(activeTabId == t.item.id){
	        		var lis = document.getElementsByTagName("li");
	        		for(var i=0;i<lis.length;i++){
	        			var temp1 = lis[i].id;
	        			var temp2 = "center-tabpanel__" + t.item.id;
	        			if(temp1 == temp2){
	        				//获取当前鼠标和tab头的X坐标之差
	        				var result = window.event.clientX - pageX(lis[i]);
	        				//当鼠标与tab头的X坐标之差在6到24之间时，就是刷新图标的位置，这时执行刷新子tab页的功能
	        				if(result > 6 && result <= 24){
		        				this.activeTab.body.dom.firstChild.contentWindow.location.reload(true);
	        				}
	        			}
	        		}
	        	}
        		activeTabId = t.item.id;
        		currTabId=t.item.id;
     		}
     	}
 	});
 	
	//获取当前对象的x坐标值
　　	function pageX(elem){
        return elem.offsetParent?(elem.offsetLeft+pageX(elem.offsetParent)):elem.offsetLeft;
	}

　　 //获取当前对象的Y坐标值
    function pageY(elem){
        return elem.offsetParent?(elem.offsetTop+pageY(elem.offsetParent)):elem.offsetTop;
    }

	function clearPopMsg(){
		 var oTable = document.getElementById("itemLists");
		 var rowsnum=oTable.rows.length;
		 var id="";
		 var receiverType="";
		 if(rowsnum>0){
			 for(i=0;i<rowsnum;i++){
				 idtxt_=document.getElementById("itemLists:"+i+":msg_msgId");
				 typetxt_=document.getElementById("itemLists:"+i+":msg_receiverType");
				 id=id+idtxt_.innerText+"#";
				 receiverType=receiverType+typetxt_.innerText+"#";
			 }
			//增加已读记录，并从缓存清除
		  addReader(id,receiverType);
		  //刷新消息，刷新缓存有延迟
		//  setTimeout(refreshMsg,2000);
		 }
		 var rbbox=document.getElementById("rbbox");
		 rbbox.style.display="none";
	}
	
	function clearModalMsg(){
		 var oTable = document.getElementById("modalMsgTab");
		 var rowsnum=oTable.rows.length;
		 var id="";
		 var receiverType="";
		 if(rowsnum>0){
			 for(i=0;i<rowsnum;i++){
				 idtxt_=document.getElementById("modalMsgTab:"+i+":msg_msgId");
				 typetxt_=document.getElementById("modalMsgTab:"+i+":msg_receiverType");
				 id=id+idtxt_.innerText+"#";
				 receiverType=receiverType+typetxt_.innerText+"#";
			 }
			//增加已读记录，并从缓存清除
		 addReader(id,receiverType);
		  //刷新消息，刷新缓存有延迟
		//  setTimeout(refreshMsg,2000);
		 }
		 document.getElementById('templateModalPanel').component.hide();
	}
	
	function closeModal(){
		document.getElementById('templateModalPanel').component.hide();
	}

	
	
	function checkSession22(){
 		var url=context_Path+"/checkSession.jsp";
 		alert(url);
		
 
 	}
    
	//]]>
 	</script>

			<style type="text/css">
.tabs {
	background: url(#{request.contextPath}/baf/images/icons/reload.gif)
		no-repeat 1px 3px !important;
}

.pic {
	margin-bottom: -4px;
	margin-right: 2px;
}

.logo {
	height: 44px;
	width: 396px;
	background-image: url(#{request.contextPath}#{loginFrameBean.logoURL});
	background-repeat: no-repeat;
}

.column1 {
	width: 5%;
	text-align: right;
}

.column2 {
	width: 95%;
}

.regaltec-message {
	width: auto;
	font-size: 9pt;
	overflow: hidden;
	white-space: nowrap;
}

.regaltec-message-td {
	font-size: 9pt;
	height: 36px;
}

.regaltec-left-scroll {
	width: 800px;
	overflow: hidden;
	margin: 0;
	padding: 0;
}

.regaltec-left-tbwidth {
	width: 800px;
	margin: 0;
	padding: 0;
	table-layout: fixed;
}

.imgmsg {
	
}

/* #msg td{width:800px;font-size:9pt;margin:0;padding:0;height:10px;}*/
	/* 当浏览器窗口缩小时，快捷菜单表格中的内容强制不换行，否则会将north部分高度撑大，窗口还原时，north高度不能还原了 */
.menutd {
	white-space: nowrap;
}

A:link {
	FONT-SIZE: 9pt;
	COLOR: #dee9f5;
	TEXT-DECORATION: none
}

A:visited {
	FONT-SIZE: 9pt;
	COLOR: #dee9f5;
	TEXT-DECORATION: none
}

A:active {
	FONT-SIZE: 9pt;
	COLOR: #ffffff;
	TEXT-DECORATION: none
}

A:hover {
	FONT-SIZE: 9pt;
	COLOR: #ffffff;
	TEXT-DECORATION: none
}
</style>

			<!--[if IE 6]>
 	<style>
	 .logo{
	 	  height:44px;
	 	  width:396px;
	 	  background: url(#{request.contextPath}/baf/images/logo.png)no-repeat;
	 }
	 html .logo {
		background: none;
		width: 396px; /* 必须指定背景图片宽度 */
		height: 44px;
		filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true, sizingMethod=scale, src='#{request.contextPath}#{loginFrameBean.logoURL}');
	 }
	</style>
    <![endif]-->

			<!--[if IE]>
	<style>
	 	/* IE浏览器下，保存完快捷方式刷新主页面顶部快捷菜单时，菜单表格高度会变小，所以在这里将表格高度固定 */
	 	.menutable{
	 		height:44px;
		}
	</style>
    <![endif]-->

		</head>

		<body style="overflow-x: hidden; overflow-y: hidden;"
			onload="onload();">
			
			<regaltec:viewPort ctCls="panel-bdColor" transient="true">
				<regaltec:boxComponent id="north" region="north" el="north"
					height="69" />
				<regaltec:viewPortPanel region="west" id="west-panel"
					autoScroll="false" contentEl="west"
					title="#{msgs['baf.mainInterface.navigation.title']}" split="true"
					width="200" minSize="175" maxSize="400" collapsible="true"
					collapsed="#{loginFrameBean.collapsed}" margins="0 0 0 5"
					layout="accordion" />
				<regaltec:viewPortTabPanel activeTab="0" resizeTabs="true"
					minTabWidth="115" tabWidth="135" id="center-tabpanel"
					region="center" listeners="{ remove:removeBefore} "
					items="[{
	    			xtype:'portal',
					title:'#{msgs['baf.mainInterface.desktop.title']}',
        			margins:'0 0 0 0'
        			#{desktopCustomizeBean.desktopItems }
        		}]"
					enableTabScroll="true" plugins="new Ext.ux.TabCloseMenu()" />
				<regaltec:boxComponent region="south" el="south" height="20" />
			</regaltec:viewPort>

			<div id="west">
			<c:if test="#{loginFrameBean.authFlag &amp;&amp; userLoginBean.currentUser.loginOrg!=null}">
				<div id="treeboxbox_tree"
					style="width: 100%; height: 100%; overflow-y: auto; position: relative;" />
		     </c:if>
		     <c:if test="#{loginFrameBean.authFlag==false}">
				<div id="treeboxbox_tree"
					style="width: 100%; height: 100%; overflow-y: auto; position: relative;" />
		     </c:if>
			</div>

			<regaltec:extContextMenu id="treemenu" transient="true">
				<regaltec:extContextMenuItem id="treeReload" text="#{msgs['baf.org.refresh']}"
					handler="reload" />
			</regaltec:extContextMenu>

			<regaltec:dhtmlXtree id="treebox" imagePath="/baf/images/dhtmlxtree/"
				contentEl="treeboxbox_tree"
				loadXML="/baf/jsp/module/moduleNavigationXMLData.jsp"
				xmlAutoLoading="/baf/jsp/module/moduleNavigationXMLData.jsp"
				transient="true"   >
				<regaltec:setDxtEevntHandler eventName="onClick" handler="doOnClick" />
				<regaltec:setDxtEevntHandler eventName="onRightClick"
					handler="openContextMenu" />
			</regaltec:dhtmlXtree>


			<div id="north" class="layout-north" style="z-index: 9999;">
				<table width="100%" cellpadding="1" border="0" cellspacing="0"
					class="rich-text-header"
					style="font-size: 13px; table-layout: fixed;">
					<tr>
						<td align="left" class="logo"></td>
						<td align="right" valign="top"
							class="menutable">
							<table class="rich-text-header menutable" cellspacing="5"
								style="font-size: 13px;">
								<tr>
									<td>
										<h:form id="iform" name="iform">
											
											<table class="rich-text-header" cellspacing="5"
												style="font-size: 13px;">
												<tr>
													<td class="menutd">
														<h:selectOneMenu style="width:150px;height:23px;"
															id="loginOrg" value="#{userLoginBean.currentUser.loginOrg}"
															styleClass="rich-box-border-color-control-select rich-text-control-select"
															onchange="org_logint(this.value);" rendered="#{loginFrameBean.authFlag}">

															<f:selectItems value="#{loginFrameBean.orgSelectItems}" />

														</h:selectOneMenu>
													</td>
													<td class="menutd">
														<c:if test="#{loginFrameBean.isShowProfilePost=='Y' &amp;&amp; loginFrameBean.isChecked=='Y'}">
															<input type="checkbox" name="is_zhzs" id="is_zhzs" onclick="setIs_zhzs()" checked="checked" style="padding-top: 1em" />
														</c:if>
														<c:if test="#{loginFrameBean.isShowProfilePost=='Y' &amp;&amp;loginFrameBean.isChecked==''}">
															<input type="checkbox" name="is_zhzs" id="is_zhzs" onclick="setIs_zhzs()"  style="padding-top: 1em" />
														</c:if>
														<h:outputLabel
															onclick="addTab('profilePost','#{msgs['baf.org.user.profilePostConfig']}','/baf/jsp/org/profilePost/profilePost.xhtml')"
															style="cursor: hand;" transient="true" rendered="#{loginFrameBean.isShowProfilePost=='Y'}">
															
															<h:outputText value="#{msgs['baf.org.user.profilePostConfig']}"
																escape="false" styleClass="rich-text-header"
																transient="true" />
															<rich:spacer width="5px" />
														</h:outputLabel>
													</td>
													<td class="menutd">
														<h:outputLabel onclick="logout()" style="cursor: hand;"
															transient="true">
															<h:graphicImage url="/baf/images/icons/ico_new_item.gif"
																transient="true" />
															<h:outputText value="#{msgs['logoutLabel']}"
																escape="false" styleClass="rich-text-header"
																transient="true" />
															<rich:spacer width="5px" />
														</h:outputLabel>
													</td>
													<td class="menutd">
														<h:outputLabel
															onclick="addTab('mp','#{msgs.modifyPassword}','/baf/jsp/uiframe/modifyPassword.xhtml')"
															style="cursor: hand;" transient="true">
															<h:graphicImage url="/baf/images/icons/ico_new_item.gif"
																rendered="#{loginFrameBean.isSHLogin=='N'}"
																transient="true" />
															<h:outputText value="#{msgs.modifyPassword}"
																escape="false" styleClass="rich-text-header"
																rendered="#{loginFrameBean.isSHLogin=='N'}"
																transient="true" />
															<rich:spacer width="5px" />
														</h:outputLabel>
													</td>
													
													<td class="menutd">
														<a href="#{loginFrameBean.downLoadAddr}" target="_blank"
															style="color: white; cursor: hand;" title="#{msgs['baf.org.download']}"> <h:graphicImage
																url="/baf/images/icons/ico_new_item.gif"
																rendered="#{loginFrameBean.downLoadAddr!=''}"
																transient="true" /> <h:outputText
																value="#{msgs['downloadMessage7']}"
																rendered="#{loginFrameBean.downLoadAddr!=''}"
																transient="true" /> </a>
													</td>
													
													<c:if test="#{loginFrameBean.bbsOpen=='Y'}">
														<td class="menutd">
															<h:outputLabel onclick="onBBS()" style="cursor: hand;"
																transient="true">
																<h:graphicImage url="/baf/images/icons/ico_new_item.gif"
																	transient="true" />
																<h:outputText value="#{msgs['baf.org.bbsHomepage']}" escape="false"
																	styleClass="rich-text-header" transient="true" />
																<rich:spacer width="5px" />
															</h:outputLabel>
														</td>
													</c:if>
													<a4j:repeat var="item" value="#{shortCutBean.shortCutList}"
														first="0" rows="#{shortCutBean.num}">
														<td class="menutd">
															<h:outputLabel
																onclick="javascript:addTab('#{item.moduleId }','#{item.moduleName}','#{item.moduleUrl}')"
																style="cursor: hand;" transient="true">
																<h:graphicImage url="/baf/images/icons/ico_new_item.gif"
																	transient="true" />
																<h:outputText value="#{item.moduleName}" escape="false"
																	styleClass="rich-text-header" transient="true" />
																<rich:spacer width="5px" />
															</h:outputLabel>
														</td>
													</a4j:repeat>
													<td class="menutd">
															<h:outputLabel onclick="onLinks()" style="cursor: hand;"
																transient="true" rendered="#{loginFrameBean.links!=''}">
																<h:graphicImage url="/baf/images/icons/ico_new_item.gif"
																	transient="true" />
																<h:outputText value="#{msgs['baf.org.information']}" escape="false"
																	styleClass="rich-text-header" transient="true" />
																<rich:spacer width="5px" />
															</h:outputLabel>
													</td>
													<ui:remove>二维码扫描下载（江苏）</ui:remove>
													<c:if test="#{loginFrameBean.appDownLoadOpen eq 'Y' }">
														<td class="menutd">
															<h:outputLabel onclick="#{rich:component('appDownModalPanel')}.show();return false;" style="cursor: hand;"
																transient="true">
																<h:graphicImage url="/baf/images/icons/ico_new_item.gif"
																	transient="true" />
																<h:outputText value="随身运维APP下载路径" escape="false"
																	styleClass="rich-text-header" transient="true" />
																<rich:spacer width="5px" />
															</h:outputLabel>
														</td>
													</c:if>
													<td id="moreimg" class="menutd">
														<h:graphicImage url="/baf/images/icons/more.gif"
															rendered="#{shortCutBean.haveMore!='N'}"
															style="cursor: hand;" transient="true" />
														<regaltec:extContextMenu id="shortcutMenu"
															binding="#{shortCutBean.moreShortCut}" event="click"
															renderTo="moreimg" />
													</td>
												</tr>
											</table>
										</h:form>
										<a4j:keepAlive beanName="shortCutBean" />
										<a4j:keepAlive beanName="loginFrameBean" />
										<a4j:keepAlive beanName="scrollMessageBean" />

									</td>
								</tr>
							</table>
						</td>
					</tr>
					<tr>
						<td align="right" colspan="2">
							<!-- 布局表格 -->
							<table width="100%" id="msgtable" border="0"
								style="table-layout: fixed;">
								<tr>
									<td width="200">
										<rich:spacer width="2px"></rich:spacer>
									</td>
									<td align="left" class="menutd" width="100">

										<BGSOUND BALANCE="100" ID="playsound" VOLUME="80" loop="2" />
										<BGSOUND BALANCE="100" ID="popsound" VOLUME="80" loop="2" />
										<!-- 
								<a href="javascript:hideTip();" id="msgtip">
								 -->
										<ui:remove>
											<h:graphicImage url="/baf/images/message/blt_norevert2.gif"
												rendered="#{scrollMessageBean.notReadCount > 0}" />
											<h:outputText value="(${scrollMessageBean.notReadCount})"
												rendered="#{scrollMessageBean.notReadCount > 0}"
												styleClass="rich-text-header" transient="true"></h:outputText>
										</ui:remove>
										<!--  </a>  -->
										<a style="text-decoration: none;"
											href="javascript:addTab('abc123','#{msgs['baf.org.message']}','/baf/jsp/message/messageIndex.xhtml')"
											class="rich-text-header">#{msgs['baf.org.messageList']}</a>
									</td>
									<td class="menutd" align="left">
										<h:panelGrid width="100%" border="0" cellspacing="0"
											id="msgGroup" style=" margin:0;padding:0;">
											<regaltec:message value="#{scrollMessageBean.msgList}"
												speed="360" id="msg" direction="left" />
										</h:panelGrid>
									</td>
									<td align="right" width="30">
										<img id="soundimg"
											src="${request.contextPath}/baf/images/message/sound_on.gif"
											border="0" onclick="sound_onoff()" />
									</td>
								</tr>
							</table>
							<!-- 布局表格 END-->
						</td>
					</tr>
					<tr height="5">
						<td colspan="2" class="panel-bdColor"></td>
					</tr>
				</table>

				<!-- quicktime提示框 -->
				<div id="tipbox"
					style="position: absolute; right: 5; top: 20; width: 220px; height: 50px; display: none; border-top-left-radius: 4px 4px; border-top-right-radius: 4px 4px;">
					<rich:panel>
						<f:facet name="header">			                          
			            #{msgs['baf.uiframe.installTips']}<!-- 安装quicktime提示 -->
			          <!-- 关闭按钮 -->
							<img src="#{request.contextPath}/baf/images/icons/close.png"
								onclick="hideQuickTimeTip()" id="hidelink"
								style="float: right; position: absolute; z-index: 99999; right: 7px;"
								class="hidelink"></img>
						</f:facet>

						<div style="margin: 0; padding: 0; width: 170px;">
							<!-- 需要安装quicktime插件才能正常播放声音 -->
							<h:outputText styleClass="rich-text-control-select"
								value="#{msgs['baf.uiframe.installToPlay']}"></h:outputText>
						</div>
					</rich:panel>
				</div>
				<!-- quicktime提示框 END -->
			</div>

			<!-- 弹出消息框 -->
			<div id="rbbox"
				style="position: absolute; right: 5; bottom: 25; width: 190px; height: 130px; display: none;">
				<rich:panel style="height:130px;">
					<f:facet name="header">
          消息提示
          <!-- 关闭按钮 -->
						<img src="#{request.contextPath}/baf/images/icons/close.png"
							onclick="clearPopMsg()" id="hidelink"
							style="float: right; position: absolute; z-index: 99999; right: 7px;"
							class="hidelink"></img>
					</f:facet>

					<div id="box_content"
						style="margin: 0; padding: 0; height: 100px; width: 170px; overflow: auto;">
						<!--要关闭弹出窗口，请单击下边的'屏蔽弹出窗口'按钮 -->
						#{msgs['baf.uiframe.closePop']}!
					</div>
				</rich:panel>
			</div>
			<!-- 弹出消息框 END -->
			<!-- 弹出模态框 -->
			<rich:modalPanel id="templateModalPanel" autosized="false"
						keepVisualState="false" width="400" height="350">
						<f:facet name="header">
							<h:outputText
								value="#{msgs['baf.uiframe.newTips']}" />
						</f:facet>
						<!-- 关闭按钮 -->
						<f:facet name="controls">
							<h:panelGroup>
								<h:graphicImage value="/baf/images/icons/close.png"
									id="hidelink" styleClass="hidelink"  onclick="clearModalMsg()"/>
							</h:panelGroup>
						</f:facet>
							<div id="box_content_modal"
								style="margin: 0; padding: 0; height: 250px; width: 170px; overflow: auto;">
								#{msgs['baf.uiframe.closePop']}!
							</div>
						<center>
							<h:commandButton type="button" id="templateModalPanelCancel"
								styleClass="rich-button" value="#{msgs['baf.Confirm']}"
								onclick="#{rich:component('templateModalPanel')}.hide();clearModalMsg(); return false;" />
						</center>
					</rich:modalPanel>
			<!-- 弹出模态框 end-->
			<div id="south" class="layut-south">
				<table width="100%" align="center"
					style="font-size: 13px; table-layout: fixed;">
					<tr>
						<td width="120" id="helpicon" style="cursor: hand;">
							<div style="white-space: nowrap; position: relative;">
								<h:outputText value="#{msgs['currentUser']}:" transient="true" />
								<a
									href="javascript:addTab('loginUserInfo','#{msgs['baf.loginUserInfo']}','/baf/jsp/uiframe/loginUserInfo.xhtml')"
									title="#{userLoginBean.currentUser.userName}"> <h:outputText
										value="#{userLoginBean.currentUser.userName}"
										style="color:blue;font-size:13px;" transient="true" /> </a>
							</div>
						</td>
						<td align="center" style="position: relative;">
							<div style="position: absolute; left: 45%;">
								<h:outputText value="#{loginFrameBean.company}" />
							</div>
							<div style="top: 0; float: right; z-index: 1;">
								<h:outputText
									value="#{msgs['dutyphone']}: #{loginFrameBean.dutyhotphone}"
									style="color:red;font-weight:bold;font-size:13px;"
									transient="true" />
							</div>
						</td>
						<td width="120" style="cursor: hand;" align="center">
							<a href="javascript:closeBox()" id="clBox"><h:outputText
									value="#{msgs['baf.org.popWindow']}" style="color:blue;font-size:13px;" />
							</a>
							<a href="javascript:enableBox()" id="opBox"
								style="display: none;"><h:outputText value="#{msgs['baf.org.window']}"
									style="color:blue;font-size:13px;" transient="true" />
							</a>
						</td>
					</tr>
				</table>
				<!-- 隐藏的消息内容TALBE -->
				<rich:dataGrid width="100%" id="itemLists" columns="1"
					style="display:none;" value="#{scrollMessageBean.popupMsgList}"
					var="item">
					<h:outputText id="msg_title" value="#{item.messageTitle}"></h:outputText>
					<h:outputText id="msg_imageCode" value="#{item.imageCode}"></h:outputText>
					<h:outputText id="msg_receiverType" value="#{item.receiverType}"></h:outputText>
					<h:outputText id="msg_url" value="#{item.viewLink}"></h:outputText>
					<h:outputText id="msg_msgId" value="#{item.messageId}"></h:outputText>
					<h:outputText id="msg_voiceCode" value="#{item.voiceCode}"></h:outputText>
					<h:outputText id="msg_startTime1" value="#{item.startTime1}"></h:outputText>
					<h:outputText id="msg_endTime1" value="#{item.endTime1}"></h:outputText>
					<h:outputText id="msg_startTime2" value="#{item.startTime2}"></h:outputText>
					<h:outputText id="msg_endTime2" value="#{item.endTime2}"></h:outputText>
					<h:outputText id="msg_startTime3" value="#{item.startTime3}"></h:outputText>
					<h:outputText id="msg_endTime3" value="#{item.endTime3}"></h:outputText>
				</rich:dataGrid>

				<rich:dataGrid width="100%" id="moveMsgTab" columns="1"
					style="display:none;" value="#{scrollMessageBean.msgList}"
					var="moveItem">
					<h:outputText id="msg_title" value="#{moveItem.messageTitle}"></h:outputText>
					<h:outputText id="msg_imageCode" value="#{moveItem.imageCode}"></h:outputText>
					<h:outputText id="msg_receiverType" value="#{item.receiverType}"></h:outputText>
					<h:outputText id="msg_url" value="#{moveItem.viewLink}"></h:outputText>
					<h:outputText id="msg_msgId" value="#{moveItem.messageId}"></h:outputText>
					<h:outputText id="msg_voiceCode" value="#{moveItem.voiceCode}"></h:outputText>
					<h:outputText id="msg_startTime1" value="#{moveItem.startTime1}"></h:outputText>
					<h:outputText id="msg_endTime1" value="#{moveItem.endTime1}"></h:outputText>
					<h:outputText id="msg_startTime2" value="#{moveItem.startTime2}"></h:outputText>
					<h:outputText id="msg_endTime2" value="#{moveItem.endTime2}"></h:outputText>
					<h:outputText id="msg_startTime3" value="#{moveItem.startTime3}"></h:outputText>
					<h:outputText id="msg_endTime3" value="#{moveItem.endTime3}"></h:outputText>
				</rich:dataGrid>
				
				<rich:dataGrid width="100%" id="modalMsgTab" columns="1"
					style="display:none;" value="#{scrollMessageBean.modalMsgList}"
					var="modalItem">
					<h:outputText id="msg_title" value="#{modalItem.messageTitle}"></h:outputText>
					<h:outputText id="msg_imageCode" value="#{modalItem.imageCode}"></h:outputText>
					<h:outputText id="msg_receiverType" value="#{modalItem.receiverType}"></h:outputText>
					<h:outputText id="msg_url" value="#{modalItem.viewLink}"></h:outputText>
					<h:outputText id="msg_msgId" value="#{modalItem.messageId}"></h:outputText>
					<h:outputText id="msg_voiceCode" value="#{modalItem.voiceCode}"></h:outputText>
					<h:outputText id="msg_startTime1" value="#{modalItem.startTime1}"></h:outputText>
					<h:outputText id="msg_endTime1" value="#{modalItem.endTime1}"></h:outputText>
					<h:outputText id="msg_startTime2" value="#{modalItem.startTime2}"></h:outputText>
					<h:outputText id="msg_endTime2" value="#{modalItem.endTime2}"></h:outputText>
					<h:outputText id="msg_startTime3" value="#{modalItem.startTime3}"></h:outputText>
					<h:outputText id="msg_endTime3" value="#{modalItem.endTime3}"></h:outputText>
				</rich:dataGrid>
				<!-- 隐藏的消息内容TALBE END-->
				<span id="googlesound"></span>
				<span id="googlepopsound"></span>

			</div>
			<rich:modalPanel id="quikcTimePanel" autosized="true" width="300" >
				<f:facet name="header">
					<h:outputText value="#{msgs['baf.uiframe.installTips']}" style="padding-right:15px;" />
				</f:facet>
				<!-- 关闭按钮 -->
				<f:facet name="controls">
					<h:panelGroup>
						<h:graphicImage value="/baf/images/icons/close.png"
							id="hidelinkDelete" styleClass="hidelink" />
						<rich:componentControl for="quikcTimePanel"
							attachTo="hidelinkDelete" operation="hide" event="onclick" />
					</h:panelGroup>
				</f:facet>
				<div style="width: 100%;">
					<!--你正在使用google浏览器，需要安装quicktime插件才能正常播放声音 -->
					#{msgs['baf.uiframe.installToPlay']}					
				</div>
				<span style="float: left;"> <input type="checkbox"
						name="noshow" id="noshow" />#{msgs['baf.uiframe.prompt']} </span>
				<span
					style="margin: 0px 100px 0 100px; float: left; text-align: center;">
					<h:commandButton type="button" id="modalPanelCancel"
						styleClass="rich-button" value="#{msgs['baf.Confirm']}"
						onclick="#{rich:component('quikcTimePanel')}.hide();no_show(); return false;" />
				</span>
			</rich:modalPanel>
			<ui:remove>二维码扫描下载模态框</ui:remove>
			<rich:modalPanel id="appDownModalPanel" autosized="false" keepVisualState="false" width="400" height="350" rendered="#{loginFrameBean.appDownLoadOpen eq 'Y' }">
				<f:facet name="header">
					<h:outputText value="随身运维APP下载窗口" />
				</f:facet>
				<!-- 关闭按钮 -->
				<f:facet name="controls">
					<h:panelGroup>
						<h:graphicImage value="/baf/images/icons/close.png" id="apphidelink" styleClass="hidelink" />
						<rich:componentControl for="appDownModalPanel" attachTo="apphidelink" operation="hide" event="onclick" />
				    </h:panelGroup>
					</f:facet>
					<center>
						<div><h:graphicImage url="#{loginFrameBean.appDownUrl}" title="使用手机上的二维码扫描软件拍摄以上二维码即可立即下载。" /></div>
					</center>
			</rich:modalPanel>
			<a4j:form>
				<a4j:jsFunction name="freeViewCache"
					action="#{shortCutBean.freeViewCache}">
					<a4j:actionparam name="viewUrl" value=""
						assignTo="#{shortCutBean.viewUrl}" />
				</a4j:jsFunction>
				<a4j:jsFunction name="logoutUser" action="#{userLoginBean.logout}"
					oncomplete="onLogoutComplete()" />
				<a4j:jsFunction name="refresh"
					actionListener="#{shortCutBean.refresh}" reRender="iform" />
				<a4j:jsFunction name="getNotReadMsg"
					action="#{scrollMessageBean.getNotReadCount}"
					oncomplete="hidePanel()"></a4j:jsFunction>
				<a4j:jsFunction name="refreshMsg"
					action="#{scrollMessageBean.loadAllMsg}"
					reRender="itemLists,msgGroup,moveMsgTab,modalMsgTab" oncomplete="resetMsg()" />
				<a4j:jsFunction name="addReader" action="#{messageBean.addReader}"
					oncomplete="refreshMsg()">
					<a4j:actionparam name="messageId" value="" />
					<a4j:actionparam name="receiverType" value="" />
				</a4j:jsFunction>
				
				<a4j:jsFunction name="singleLogin"
					action="#{userLoginBean.singleLogin}"  oncomplete="singleLogincomplete();">
					<a4j:actionparam name="loginOrg" assignTo="#{userLoginBean.loginOrg}" />
		          </a4j:jsFunction>
		
				<!-- 差当前登录用户权限 -->
				<a4j:jsFunction name="setOperateCache"
					action="#{userBean.setOperateCache}" />
				<a4j:jsFunction name="getProfileMsgType"
					action="#{messageBean.getProfileMsgType}" />

				<!-- 关闭浏览器时，清楚session，写入用户离线状态 -->
				<a4j:jsFunction name="logoutUser1" action="#{userLoginBean.logout}" />
				<a4j:jsFunction name="getUserDutty"
					action="#{scrollMessageBean.getUserDutty}"
					data="#{scrollMessageBean.data}" oncomplete="openTimer(data)" />

				<!-- 将打开的模块放入cookie中 -->
				<a4j:jsFunction name="operateCookie"
					action="#{moduleBean.operateCookie}">
					<a4j:actionparam name="moduleId" />
					<a4j:actionparam name="moduleName" />
					<a4j:actionparam name="moduleUrl" />
				</a4j:jsFunction>
				
				<!-- -每隔10分自动访问服务器 -->
				<a4j:jsFunction name="resetSession" action="#{loginFrameBean.resetSession}" />
				
				<!-- 设置综合值守 -->
				<a4j:jsFunction name="setProfile"	action="#{loginFrameBean.setProfile}">
					<a4j:actionparam name="isChecked"  assignTo="#{loginFrameBean.isChecked}"/>
				</a4j:jsFunction>
				
			</a4j:form>

			<script>
		//<![CDATA[
     
		function myAddTab(id,title,url,receiverType){
			var parentW = null;
			try {
				parentW = window.parent;
			} catch (e) {
				parentW = window;
			}
			if(null !=parentW) parentW.addRetMsgTab(id,title,url);

			  //增加已读记录，并从缓存清除
			  addReader(id,receiverType);
			  //刷新消息，刷新缓存有延迟
			//  setTimeout(refreshMsg,2000);
			  //计数器清0
		}

		function addMoveTab(id,title,url,receiverType){
			addRetMsgTab(id,title,url);
		       //增加已读记录，并从缓存清除
			  addReader(id,receiverType);
			  //刷新消息，刷新缓存有延迟
			//  setTimeout(refreshMsg,2000);
			  //计数器清0
			}
		
		//页面加载完成执行jsFunction查当前登录用户权限
		function onload(){
		    var timeout = setTimeout("setOperateCache();",1000);
		    setInterval(setSession,25*60*1000);
		    
		} 
		
		//每隔25分钟访问服务器，更新session的时间
 		function setSession(){
 			if("Y"=="#{loginFrameBean.isResetSession}"){
 				resetSession();
 			}
  	 	}
   	 function org_logint(loginOrg){
   	    if(loginOrg!="")
   	      singleLogin(loginOrg);
   	 }
   	    	 
   	function singleLogincomplete(){
	   document.location.reload(false);
         // document.location.href = "/baf/jsp/uiframe/frame.xhtml?="+dsafdas;
   	 }
		
		//]]>
        </script>
		</body>
	</f:view>
</html>


