package org.apache.jsp.jsp.faceSupt;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class faceDataSrch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.AnnotationProcessor _jsp_annotationprocessor;

  public Object getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_annotationprocessor = (org.apache.AnnotationProcessor) getServletConfig().getServletContext().getAttribute(org.apache.AnnotationProcessor.class.getName());
  }

  public void _jspDestroy() {
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>集团电子运维系统互联接口平台</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/ext3/resources/css/ext-all.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/ext3/resources/css/ext-app.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/ext3/adapter/ext/ext-base.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/ext3/ext-all.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./node.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/dwr/engine.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/dwr/util.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/dwr/interface/checkAction.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tDWREngine.setErrorHandler(handler);\r\n");
      out.write("    function handler(errors) {\r\n");
      out.write("        alert(errors);\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar faceRecord, ruleRecord, saveRecord;\r\n");
      out.write("\t\r\n");
      out.write("\tExt.onReady(function() {\r\n");
      out.write("\t\tExt.BLANK_IMAGE_URL = \"/js/ext3/resources/images/default/s.gif\";\r\n");
      out.write("\t\t//Ext.layout.FormLayout.prototype.trackLabels = false;\r\n");
      out.write("\t\tExt.QuickTips.init(); \r\n");
      out.write("\r\n");
      out.write("\t\tvar faceStore = new Ext.data.JsonStore({\r\n");
      out.write("\t\t\tautoLoad: false,\r\n");
      out.write("\t\t\turl: \"/supt/checkAction.do?method=faceDataList\",\r\n");
      out.write("\t\t\tparamNames: { start: \"skipResults\", limit: \"maxResults\" },\r\n");
      out.write("\t\t\troot: \"data\",\r\n");
      out.write("\t\t\ttotalProperty: \"totalRows\",\r\n");
      out.write("\t        fields: [\r\n");
      out.write("\t           {name: \"cimpFaceId\"},\r\n");
      out.write("\t           {name: \"applicationName\"},\r\n");
      out.write("\t           {name: \"cimpName\"},\r\n");
      out.write("\t           {name: \"methodName\"},\r\n");
      out.write("\t           {name: \"exetMethodname\"},\r\n");
      out.write("\t           {name: \"paramater\"},\r\n");
      out.write("\t           {name: \"isValid\"},\r\n");
      out.write("\t           {name: \"returnAppid\"},\r\n");
      out.write("\t        ]\r\n");
      out.write("\t    });\r\n");
      out.write("\r\n");
      out.write("\t\tvar saveStore = new Ext.data.JsonStore({\r\n");
      out.write("\t\t\tfields: [\r\n");
      out.write("\t\t\t\t{name: \"returnValidId\"},\r\n");
      out.write("\t\t\t\t{name: \"operName\"},\r\n");
      out.write("\t\t\t\t{name: \"opernamePath\"},\r\n");
      out.write("\t\t\t\t{name: \"operpathFrom\"},\r\n");
      out.write("\t\t\t\t{name: \"fieldName\"},\r\n");
      out.write("\t\t\t\t{name: \"fieldPath\"},\r\n");
      out.write("\t\t\t\t{name: \"fieldpathFrom\"},\r\n");
      out.write("\t\t\t\t{name: \"prikeyName\"},\r\n");
      out.write("\t\t\t\t{name: \"prikeyPath\"},\r\n");
      out.write("\t\t\t\t{name: \"prikeyFrom\"}\r\n");
      out.write("\t\t\t]\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar sm = new Ext.grid.CheckboxSelectionModel({singleSelect:true});\r\n");
      out.write("\r\n");
      out.write("\t\tvar formCt = new Ext.form.FormPanel({\r\n");
      out.write("\t\t\t\tid: \"form-ct\",\r\n");
      out.write("\t\t\t\tcollapsed: true,\r\n");
      out.write("\t\t\t\tcollapsible: true,\r\n");
      out.write("\t\t\t\ttitle: \"搜索条件\",\r\n");
      out.write("\t\t\t\ticonCls: \"fellow\",\r\n");
      out.write("\t\t\t\tmargins: \"0 0 10 0\",\r\n");
      out.write("\t\t\t\tlabelWidth: 60,\r\n");
      out.write("\t\t\t\theight: \"auto\",\r\n");
      out.write("\t\t\t\tlabelAlign: \"right\",\r\n");
      out.write("\t\t\t\tframe: true,\r\n");
      out.write("\t\t\t\titems: [{\r\n");
      out.write("\t\t\t\t\tlayout: \"column\",\r\n");
      out.write("\t\t\t\t\titems: [{\r\n");
      out.write("\t\t\t\t\t\tcolumnWidth: .35,\r\n");
      out.write("\t\t\t\t\t\tlayout: \"form\",\r\n");
      out.write("\t\t\t\t\t\titems: [{\r\n");
      out.write("\t\t\t\t\t\t\txtype: \"textfield\",\r\n");
      out.write("\t\t\t\t\t\t\tfieldLabel: \"接口名称\",\r\n");
      out.write("\t\t\t\t\t\t\tname: \"cimpName\",\r\n");
      out.write("\t\t\t\t\t\t\tanchor: \"90%\"\r\n");
      out.write("\t\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\tcolumnWidth: .35,\r\n");
      out.write("\t\t\t\t\t\tlayout: \"form\",\r\n");
      out.write("\t\t\t\t\t\titems: [{\r\n");
      out.write("\t\t\t\t\t\t\txtype: \"textfield\",\r\n");
      out.write("\t\t\t\t\t\t\tfieldLabel: \"接口编码\",\r\n");
      out.write("\t\t\t\t\t\t\tname: \"methodName\",\r\n");
      out.write("\t\t\t\t\t\t\tanchor: \"90%\"\r\n");
      out.write("\t\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\tcolumnWidth: .3,\r\n");
      out.write("\t\t\t\t\t\tlayout: \"form\",\r\n");
      out.write("\t\t\t\t\t\titems: [{\r\n");
      out.write("\t\t\t\t\t\t\txtype: \"combo\",\r\n");
      out.write("\t\t\t\t\t\t\tframe: true,\r\n");
      out.write("\t\t\t\t\t\t\teditable: false,\r\n");
      out.write("\t\t\t\t\t\t\tfieldLabel: \"是否有效\",\r\n");
      out.write("\t\t\t\t\t\t\tmode: \"local\",\r\n");
      out.write("\t\t\t\t\t\t\ttriggerAction: \"all\",\r\n");
      out.write("\t\t\t\t\t\t\tstore: new Ext.data.SimpleStore({\r\n");
      out.write("\t\t\t\t\t\t\t\tfields: [\"valueText\", \"displayText\"],\r\n");
      out.write("\t\t\t\t\t\t\t\tdata: [[\"Y\", \"有效\"], [\"N\", \"无效\"]]\r\n");
      out.write("\t\t\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\t\t\thiddenName: \"isValid\",\r\n");
      out.write("\t\t\t\t\t\t\tvalueField: \"valueText\",\r\n");
      out.write("\t\t\t\t\t\t\tdisplayField: \"displayText\",\r\n");
      out.write("\t\t\t\t\t\t\tforceSelection: true,\r\n");
      out.write("\t\t\t\t\t\t\tvalue: \"Y\",\r\n");
      out.write("\t\t\t\t\t\t\tanchor: \"90%\"\r\n");
      out.write("\t\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t}],\r\n");
      out.write("\t\t\t\tbuttons: [\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\ttext: \"搜索\",\r\n");
      out.write("\t\t\t\t\t\tmargins: \"0\",\r\n");
      out.write("\t\t\t\t\t\thandler: initQueryResultList\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\ttext: \"重置\",\r\n");
      out.write("\t\t\t\t\t\tmargins: \"0\",\r\n");
      out.write("\t\t\t\t\t\thandler: function() {\r\n");
      out.write("\t\t\t\t\t\t\tExt.getCmp(\"form-ct\").getForm().reset();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar tabCt = new Ext.TabPanel({\r\n");
      out.write("\t\t\t\txtype: \"tabpanel\",\r\n");
      out.write("\t\t\t\tid: \"panel-ct\",\r\n");
      out.write("\t\t\t\tactiveTab: 0,\r\n");
      out.write("\t\t\t\tplain: false,\r\n");
      out.write("\t\t\t\tflex: 1,\r\n");
      out.write("\t\t\t\titems: [\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\txtype: \"grid\",\r\n");
      out.write("\t\t\t\t\t\ttitle: \"接口方法列表\",\r\n");
      out.write("\t\t\t\t\t\ticonCls: \"fellow\",\r\n");
      out.write("\t\t\t\t\t\tframe: false,\r\n");
      out.write("\t\t\t\t\t\tborder: false,\r\n");
      out.write("\t\t\t\t\t\tstore: faceStore,\r\n");
      out.write("\t\t\t\t\t\tstripeRows: true,\r\n");
      out.write("\t\t\t\t\t\tloadMask: { msg: \"正在加载中，请稍后……\" },\r\n");
      out.write("\t\t\t\t\t\tautoExpandColumn: \"cimpName\",\r\n");
      out.write("\t\t\t\t\t\tviewConfig: { forceFit: true },\r\n");
      out.write("\t\t\t\t\t\tcm: new Ext.grid.ColumnModel([\r\n");
      out.write("\t\t\t\t\t\t\tnew Ext.grid.RowNumberer(),\r\n");
      out.write("\t\t\t\t\t\t  \tsm,\r\n");
      out.write("\t\t\t\t\t\t\t{header: \"系统名称\", width: 100, dataIndex: \"applicationName\"},\r\n");
      out.write("\t\t\t\t\t\t\t{header: \"接口名称\", width: 300, dataIndex: \"cimpName\"},\r\n");
      out.write("\t\t\t\t\t\t\t{header: \"转入接口编码\", width: 190, dataIndex: \"methodName\"},\r\n");
      out.write("\t\t\t\t\t\t\t{header: \"转出接口编码\", width: 170, dataIndex: \"exetMethodname\"},\r\n");
      out.write("\t\t\t\t\t\t\t{header: \"请求参数\", width: 120, dataIndex: \"paramater\"},\r\n");
      out.write("\t\t\t\t\t\t\t{header: \"是否有效\", width: 80, renderer: function(value) { if (value == \"Y\") { return \"有效\"; } else if (value == \"N\") { return \"无效\"; } else { return \"未知\"; } }, dataIndex: \"isValid\"},\r\n");
      out.write("\t\t\t\t\t\t\t{header: \"出入参数\", width: 80, renderer: function(value) { if (value == \"IN\") { return \"入参\"; } else if (value == \"OUT\") { return \"出参\"; } else { return \"未知\"; } }, dataIndex: \"returnAppid\"}\r\n");
      out.write("\t\t\t\t\t\t]),\r\n");
      out.write("\t\t\t\t\t\tsm: sm,\r\n");
      out.write("\t\t\t\t\t\ttbar: [\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\ttext: \"新增接口\",\r\n");
      out.write("\t\t\t\t\t\t\t\ticonCls: \"plus\",\r\n");
      out.write("\t\t\t\t\t\t\t\thandler: addFace\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\ttext: \"修改接口\",\r\n");
      out.write("\t\t\t\t\t\t\t\ticonCls: \"edit\",\r\n");
      out.write("\t\t\t\t\t\t\t\thandler: modifyFace\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\ttext: \"错误处理方式\",\r\n");
      out.write("\t\t\t\t\t\t\t\ticonCls: \"insect\",\r\n");
      out.write("\t\t\t\t\t\t\t\thandler: errFace\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\ttext: \"转出规则\",\r\n");
      out.write("\t\t\t\t\t\t\t\ticonCls: \"merge\",\r\n");
      out.write("\t\t\t\t\t\t\t\thandler: checkOutFace\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\ttext: \"返回值规则\",\r\n");
      out.write("\t\t\t\t\t\t\t\ticonCls: \"store\",\r\n");
      out.write("\t\t\t\t\t\t\t\thandler: returnSave\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\ttext: \"预览文档\",\r\n");
      out.write("\t\t\t\t\t\t\t\ticonCls: \"find\",\r\n");
      out.write("\t\t\t\t\t\t\t\thandler: getOutXml\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t],\r\n");
      out.write("\t\t\t\t\t\tbbar: new Ext.PagingToolbar({\r\n");
      out.write("\t\t                    pageSize: 20,\r\n");
      out.write("\t\t                    store: faceStore,\r\n");
      out.write("\t\t                    beforePageText: \"第\",\r\n");
      out.write("\t\t                    afterPageText: \"/{0}页\",\r\n");
      out.write("\t\t                    firstText: \"首页\",\r\n");
      out.write("\t\t                    prevText: \"上页\",\r\n");
      out.write("\t\t                    nextText: \"下页\",\r\n");
      out.write("\t\t                    lastText: \"尾页\",\r\n");
      out.write("\t\t                    refreshText: \"刷新\",\r\n");
      out.write("\t\t                    displayInfo: true,\r\n");
      out.write("\t\t                    displayMsg: '当前显示记录从{0} 到 {1} 总共{2}条记录',\r\n");
      out.write("\t\t                    emptyMsg: \"没有数据\"\r\n");
      out.write("\t\t                }),\r\n");
      out.write("\t\t\t\t\t\tlisteners: {\r\n");
      out.write("\t\t\t\t\t\t\trowclick: function(g, i, e) {\r\n");
      out.write("\t\t\t\t\t\t\t\tfaceRecord = faceStore.getAt(i);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar viewportCt = new Ext.Viewport({\r\n");
      out.write("\t\t\tlayout: {\r\n");
      out.write("\t\t\t\ttype: \"vbox\",\r\n");
      out.write("\t\t\t\talign : \"stretch\",\r\n");
      out.write("\t\t\t\tpadding: \"10\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\titems: [ formCt, tabCt]\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tviewportCt.render(document.body);\r\n");
      out.write("\r\n");
      out.write("\t\tformCt.addListener(\"collapse\", function(panelCt) {\r\n");
      out.write("\t\t\tviewportCt.doLayout();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tformCt.addListener(\"expand\", function(panelCt) {\r\n");
      out.write("\t\t\tviewportCt.doLayout();\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfaceStore.load({params: Ext.apply({skipResults: 0, maxResults: 20}, Ext.getCmp(\"form-ct\").getForm().getValues())});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction initQueryResultList(){\r\n");
      out.write("\t\t\tDWRUtil.useLoadingMessage('数据读取中...');\r\n");
      out.write("\t\t\tfaceStore.load({params: Ext.apply({skipResults: 0, maxResults: 20}, Ext.getCmp(\"form-ct\").getForm().getValues())});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction initQueryResultList3() {\r\n");
      out.write("\t\t\tDWRUtil.useLoadingMessage('数据读取中...');\r\n");
      out.write("\t\t\tcheckAction.returnValueDataList({ cimpFaceId: faceRecord.get(\"cimpFaceId\") }, function (data) {\r\n");
      out.write("\t\t\t\tsaveStore.loadData(data);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//新增\r\n");
      out.write("\t\tfunction addFace() {\r\n");
      out.write("\t\t\tvar url = \"/supt/checkAction.do?method=toModifyFace&id=111\";\r\n");
      out.write("\t\t\tvar returnValue = window.showModalDialog(url, window, 'dialogHeight:750px;dialogWidth:550px;status=no;resizable:no');\r\n");
      out.write("\t\t\tif(returnValue == \"T\"){\r\n");
      out.write("\t\t\t\tinitQueryResultList();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//修改\r\n");
      out.write("\t\tfunction modifyFace() {\r\n");
      out.write("\t\t\tif (!!faceRecord) {\r\n");
      out.write("\t\t\t\tvar url = \"/supt/checkAction.do?method=toModifyFace&id=\" + faceRecord.get(\"cimpFaceId\");\r\n");
      out.write("\t\t\t\tvar returnValue = window.showModalDialog(url, window, 'dialogHeight:750px;dialogWidth:550px;status=no;resizable:no');\r\n");
      out.write("\t\t    \tif(returnValue == \"T\"){\r\n");
      out.write("\t\t\t\t\tinitQueryResultList();\r\n");
      out.write("\t\t    \t}\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//错误处理方式\r\n");
      out.write("\t\tfunction errFace(){\r\n");
      out.write("\t\t\tif (!!faceRecord) {\r\n");
      out.write("\t\t\t\t//var url = \"/jsp/faceSupt/errfaceDataSrch.jsp?id=\" + faceRecord.get(\"cimpFaceId\");\r\n");
      out.write("\t\t\t\tvar url =\"/supt/triggerAction.do?method=getTriggerList&portId=\" + faceRecord.get(\"cimpFaceId\");\r\n");
      out.write("\t\t\t\twindow.showModalDialog(url, window, 'dialogHeight:550px;dialogWidth:550px;status=no;resizable:no');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//打开转出规则  \r\n");
      out.write("\t\tfunction checkOutFace() {\r\n");
      out.write("\t\t\tif (!!faceRecord) {\r\n");
      out.write("\t\t\t\tvar tabCt = new Ext.ux.grid.NodeGrid({ documentId: faceRecord.get(\"cimpFaceId\"), title: \"转出规则(\" + faceRecord.get(\"methodName\") + \")\"});\r\n");
      out.write("\t\t\t\tExt.getCmp(\"panel-ct\").add(tabCt).show();\r\n");
      out.write("\t\t\t\t//initQueryResultList2();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//打开返回值保存规则  \r\n");
      out.write("\t\tfunction returnSave(){\r\n");
      out.write("\t\t\tif (!!faceRecord) {\r\n");
      out.write("\t\t\t\tExt.getCmp(\"panel-ct\").add({\r\n");
      out.write("\t\t\t\t\txtype: \"grid\",\r\n");
      out.write("\t\t\t\t\ttitle: \"保存规则(\" + faceRecord.get(\"methodName\") + \")\",\r\n");
      out.write("\t\t\t\t\tclosable: true,\r\n");
      out.write("\t\t\t\t\tstore: saveStore,\r\n");
      out.write("\t\t\t\t\tstripeRows: true,\r\n");
      out.write("\t\t\t\t\tborder: false,\r\n");
      out.write("\t\t\t\t\tframe: false,\r\n");
      out.write("\t\t\t\t\tviewConfig: { forceFit: true },\r\n");
      out.write("\t\t\t\t\tcm: new Ext.grid.ColumnModel([\r\n");
      out.write("\t\t\t\t\t\t{header: \"动作名称\", dataIndex: \"operName\"},\r\n");
      out.write("\t\t\t\t\t\t{header: \"动作路径\", dataIndex: \"opernamePath\"},\r\n");
      out.write("\t\t\t\t\t\t{header: \"动作取值上下行\", dataIndex: \"operpathFrom\"},\r\n");
      out.write("\t\t\t\t\t\t{header: \"更改字段名\", dataIndex: \"fieldName\"},\r\n");
      out.write("\t\t\t\t\t\t{header: \"字段路径\", dataIndex: \"fieldPath\"},\r\n");
      out.write("\t\t\t\t\t\t{header: \"字段取值上下行\", dataIndex: \"fieldpathFrom\"},\r\n");
      out.write("\t\t\t\t\t\t{header: \"主键名\", dataIndex: \"prikeyName\"},\r\n");
      out.write("\t\t\t\t\t\t{header: \"主键路径\", dataIndex: \"prikeyPath\"},\r\n");
      out.write("\t\t\t\t\t\t{header: \"主键取值上下行\", dataIndex: \"prikeyFrom\"}\r\n");
      out.write("\t\t\t\t\t]),\r\n");
      out.write("\t\t\t\t\tsm: new Ext.grid.CheckboxSelectionModel({singleSelect:true}),\r\n");
      out.write("\t\t\t\t\t//autoLoad: \"/checkAction.do?method=showReturnValue&id=\" + faceRecord.get(\"cimpFaceId\")\r\n");
      out.write("\t\t\t\t\tbbar: [\r\n");
      out.write("\t\t\t\t\t\t{ text: \"新增\", handler: addReturnValue },\r\n");
      out.write("\t\t\t\t        { text: \"修改\", handler: modifyReturnValue },\r\n");
      out.write("\t\t\t\t        { text: \"删除\", handler: deleteReturnValue }\r\n");
      out.write("\t\t\t\t\t],\r\n");
      out.write("\t\t\t\t\tlisteners: {\r\n");
      out.write("\t\t\t\t\t\trowclick: function(g, i, e) {\r\n");
      out.write("\t\t\t\t\t\t\tsaveRecord = saveStore.getAt(i);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}).show();\r\n");
      out.write("\t\t\t\tinitQueryResultList3();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//新增返回值规则\r\n");
      out.write("\t\tfunction addReturnValue() {\r\n");
      out.write("\t\t\tif (!!faceRecord) {\r\n");
      out.write("\t\t\t\tvar url = \"/jsp/faceSupt/returnValueDataAdd.jsp?id=\" + faceRecord.get(\"cimpFaceId\");\r\n");
      out.write("\t\t\t\tvar returnValue = window.showModalDialog(url, window, 'dialogHeight:500px;dialogWidth:500px;status=no;resizable:no');\r\n");
      out.write("\t\t\t\tif(returnValue == \"T\"){\r\n");
      out.write("\t\t\t\t\tinitQueryResultList3();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//修改 返回值规则\r\n");
      out.write("\t\tfunction modifyReturnValue() {\r\n");
      out.write("\t\t\tif (!!saveRecord) {\r\n");
      out.write("\t\t\t    var url = \"/supt/checkAction.do?method=toModifyReturnValue&id=\" + saveRecord.get(\"returnValidId\");\r\n");
      out.write("\t\t\t\tvar returnValue = window.showModalDialog(url, window, 'dialogHeight:500px;dialogWidth:500px;status=no;resizable:no');\r\n");
      out.write("\t\t\t    if(returnValue == \"T\"){\r\n");
      out.write("\t\t\t\t\tinitQueryResultList3();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//删除  返回值规则\r\n");
      out.write("\t\tfunction deleteReturnValue() {\r\n");
      out.write("\t\t\tif (!!saveRecord) {\r\n");
      out.write("\t\t\t\tif (!window.confirm(\"您选择的记录将删除,是否继续？\")) {\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tcheckAction.deleteReturnValue(saveRecord.get(\"returnValidId\"), initQueryResultList3);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//验证规则 \r\n");
      out.write("\t\tfunction validFace(){\r\n");
      out.write("\t\t\tif (!!faceRecord) {\r\n");
      out.write("\t\t\t\tExt.getCmp(\"panel-ct\").add({\r\n");
      out.write("\t\t\t\t\ttitle: \"验证规则\",\r\n");
      out.write("\t\t\t\t\tclosable: true,\r\n");
      out.write("\t\t\t\t\tautoLoad: \"/supt/checkAction.do?method=showSuptCheck&id=\" + faceRecord.get(\"cimpFaceId\")\r\n");
      out.write("\t\t\t\t}).show();\r\n");
      out.write("\t\t\t\t//createNewTab('tabView1','验证规则','','/checkAction.do?method=showSuptCheck&id=' + faceRecord.get(\"cimpFaceId\"),true);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//预览xml\r\n");
      out.write("\t\tfunction getOutXml() {\r\n");
      out.write("\t\t    if (!!faceRecord) {\r\n");
      out.write("\t\t\t\tvar url = \"/supt/checkAction.do?method=getOutXml&id=\" + faceRecord.get(\"cimpFaceId\");\r\n");
      out.write("\t\t\t    var win = new Ext.Window({\r\n");
      out.write("\t\t            layout:'fit',\r\n");
      out.write("\t\t            width:600,\r\n");
      out.write("\t\t            height:450,\r\n");
      out.write("\t\t            title: \"预览\" + faceRecord.get(\"cimpName\"),\r\n");
      out.write("\t\t            closeAction:'hide',\r\n");
      out.write("\t\t            plain: true,\r\n");
      out.write("\t\t            modal: true,\r\n");
      out.write("\t\t            border: false,\r\n");
      out.write("\t\t            items: new Ext.Panel({\r\n");
      out.write("\t\t\t\t\t\tautoLoad: url,\r\n");
      out.write("\t\t\t\t\t\tautoScroll: true\r\n");
      out.write("\t\t            })\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t        win.show();\r\n");
      out.write("\t\t    } else {\r\n");
      out.write("\t\t    \tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\ttitle: \"错误\",\r\n");
      out.write("\t\t\t\t\tmsg: \"请选择记录\",\r\n");
      out.write("\t\t\t\t\tbuttons: Ext.MessageBox.OK,\r\n");
      out.write("\t\t\t\t\tminWidth: 250,\r\n");
      out.write("\t\t\t\t\ticon: Ext.MessageBox.WARNING\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t    }  \r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
